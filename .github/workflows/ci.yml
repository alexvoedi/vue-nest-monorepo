name: Build Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_REGISTRY_URL: ghcr.io
  DOCKER_NAMESPACE: ${{ github.repository_owner }}
  DOCKER_IMAGE_NAME: monorepo
  HUSKY: 0

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install Dependencies
        run: |
          pnpm install --frozen-lockfile

  check-types:
    runs-on: ubuntu-latest
    needs:
      - install-dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install Dependencies
        run: |
          pnpm install --frozen-lockfile --offline

      - name: Build
        run: |
          pnpm --filter=common build

      - name: Check Types
        run: |
          pnpm run typecheck

  lint:
    runs-on: ubuntu-latest
    needs:
        - install-dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install Dependencies
        run: |
          pnpm install --frozen-lockfile --offline

      - name: Lint
        run: |
          pnpm run lint

  test:
    runs-on: ubuntu-latest
    needs:
        - install-dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.7.0
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install Dependencies
        run: |
          pnpm install --frozen-lockfile --offline

      - name: Build
        run: |
          pnpm --filter=common build

      - name: Run Tests
        run: |
          pnpm run test

  build-frontend:
    runs-on: ubuntu-latest
    environment: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build the Docker image
        run: docker build
          --target frontend
          --tag $DOCKER_REGISTRY_URL/$DOCKER_NAMESPACE/$DOCKER_IMAGE_NAME-frontend:latest
          .

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: /tmp/frontend.tar

  deploy-frontend:
    runs-on: ubuntu-latest
    needs:
      - build-frontend
      - check-types
      - lint
      - test
    steps:
      - name: Download Image
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: /tmp

      - name: Load Image
        run: |
          docker load --input /tmp/frontend.tar
          docker image ls -a

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.DOCKER_REGISTRY_URL}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Push Image
        run: docker push $DOCKER_REGISTRY_URL/$DOCKER_NAMESPACE/$DOCKER_IMAGE_NAME-frontend:latest

  build-backend:
    runs-on: ubuntu-latest
    environment: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build the Docker image
        run: docker build
          --target backend
          --tag $DOCKER_REGISTRY_URL/$DOCKER_NAMESPACE/$DOCKER_IMAGE_NAME-backend:latest
          .

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: /tmp/backend.tar

  deploy-backend:
    runs-on: ubuntu-latest
    needs:
      - build-backend
      - check-types
      - lint
      - test
    steps:
      - name: Download Image
        uses: actions/download-artifact@v4
        with:
          name: backend
          path: /tmp

      - name: Load Image
        run: |
          docker load --input /tmp/backend.tar
          docker image ls -a

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.DOCKER_REGISTRY_URL}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Push Image
        run: docker push $DOCKER_REGISTRY_URL/$DOCKER_NAMESPACE/$DOCKER_IMAGE_NAME-backend:latest
